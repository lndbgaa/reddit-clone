.container {
  height: 3.2rem;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  border-radius: 2rem;
}

.container.isLoading {
  opacity: 0.7;
  pointer-events: none;
}

.container.hasError {
  opacity: 0.5;
  transition: opacity 0.3s ease-in-out;
  animation: shake 0.3s ease-in-out 1;
}

.container span.score {
  font-size: var(--fs-xsmall);
  font-weight: var(--fw-medium);
  color: var(--clr-black);
}

.container .upvoteBtn,
.container .downvoteBtn {
  height: 100%;
  width: 3.2rem;
  display: flex;
  justify-content: center;
  align-items: center;
  border: none;
  border-radius: 2rem;
  background-color: transparent;
  cursor: pointer;
}

.container .upvoteBtn:disabled,
.container .downvoteBtn:disabled {
  cursor: not-allowed;
}

.container .upvoteBtn:hover,
.container .downvoteBtn:hover {
  background-color: var(--clr-grey-200);
}

/* ------------------ Styles when content is a post ------------------  */

.container.forPost {
  background-color: var(--clr-grey-100);
}

.container.forPost.liked {
  background-color: var(--clr-red-100);
}

.container.forPost.disliked {
  background-color: var(--clr-purple-100);
}

.container.forPost.liked span.score,
.container.forPost.disliked span.score {
  color: var(--clr-white);
}

.container.forPost .upvoteBtn svg path:first-of-type,
.container.forPost .downvoteBtn svg path:first-of-type {
  fill: var(--clr-black);
}

.container.forPost .upvoteBtn svg path:last-of-type,
.container.forPost .downvoteBtn svg path:last-of-type {
  fill: var(--clr-grey-100);
}

.container.forPost.liked .upvoteBtn:hover,
.container.forPost.liked .downvoteBtn:hover {
  background-color: var(--clr-red-200);
}

.container.forPost.disliked .upvoteBtn:hover,
.container.forPost.disliked .downvoteBtn:hover {
  background-color: var(--clr-purple-200);
}

.container.forPost.liked .upvoteBtn svg path,
.container.forPost.liked .upvoteBtn:hover svg path,
.container.forPost.disliked .downvoteBtn svg path,
.container.forPost.disliked .downvoteBtn:hover svg path {
  fill: var(--clr-white);
  stroke: var(--clr-white);
}

.container.forPost.disliked .upvoteBtn svg path:first-of-type,
.container.forPost.liked .downvoteBtn svg path:first-of-type {
  fill: var(--clr-white);
}

.container.forPost.disliked .upvoteBtn svg path {
  stroke: var(--clr-white);
  fill: var(--clr-purple-100);
}

.container.forPost.disliked .upvoteBtn:hover svg path:last-of-type {
  fill: var(--clr-purple-200);
}

.container.forPost.liked .downvoteBtn svg path {
  stroke: var(--clr-white);
  fill: var(--clr-red-100);
}

.container.forPost.liked .downvoteBtn:hover svg path:last-of-type {
  fill: var(--clr-red-200);
}

/* ------------------  Styles when content is a comment ------------------  */

.container.forComment {
  background-color: transparent;
}

.container.forComment .upvoteBtn svg path:first-of-type,
.container.forComment .downvoteBtn svg path:first-of-type {
  fill: var(--clr-grey-400);
}

.container.forComment .upvoteBtn svg path:last-of-type,
.container.forComment .downvoteBtn svg path:last-of-type {
  fill: var(--clr-white);
}

.container.forComment .upvoteBtn:hover svg path:last-of-type,
.container.forComment .downvoteBtn:hover svg path:last-of-type {
  fill: var(--clr-grey-200);
}

.container.forComment.liked .upvoteBtn svg path,
.container.forComment.liked .upvoteBtn:hover svg path {
  fill: var(--clr-red-100);
  stroke: var(--clr-red-100);
}

.container.forComment.disliked .downvoteBtn svg path,
.container.forComment.disliked .downvoteBtn:hover svg path {
  fill: var(--clr-purple-100);
  stroke: var(--clr-purple-100);
}

/* ------------------  Hover styles for both port and comment ------------------  */

.container .upvoteBtn:hover svg path {
  stroke: var(--clr-red-100);
}

.container .upvoteBtn:hover svg path:first-of-type {
  fill: var(--clr-red-100);
}

.container .downvoteBtn:hover svg path {
  stroke: var(--clr-purple-100);
}

.container .downvoteBtn:hover svg path:first-of-type {
  fill: var(--clr-purple-100);
}

/* animations */

@keyframes shake {
  0%,
  100% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-2px);
  }
  50% {
    transform: translateX(2px);
  }
  75% {
    transform: translateX(-2px);
  }
}
